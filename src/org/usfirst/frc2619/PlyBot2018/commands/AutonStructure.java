// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2619.PlyBot2018.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2619.PlyBot2018.Robot;

/**
 *
 */
public class AutonStructure extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private String m_rawAuton;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private int locFT = 0, locDG = 0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonStructure(String rawAuton) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_rawAuton = rawAuton;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	locFT = m_rawAuton.indexOf("ft");
    	locDG = m_rawAuton.indexOf("dg");
    	SmartDashboard.putString("ToBotAuton", m_rawAuton);
    	SmartDashboard.putNumber("locFT", locFT);
    	SmartDashboard.putNumber("locDG", locDG);
    	
    	if(locDG < 0) {
    		locDG = 999;
    	}
    	if(locFT < 0) {
    		locFT = 999;
    	}
    	
    	if(locDG > locFT) {
    		//these do not happen
    		new DriveXFeetMotionMagic(Integer.parseInt(m_rawAuton.substring(0, locFT)));
    		m_rawAuton = m_rawAuton.substring(locFT+2);
    	}
    	else {
    		new TurnNDegreesAbsolutePID(Integer.parseInt(m_rawAuton.substring(0, locDG)));
    		m_rawAuton = m_rawAuton.substring(locDG+2);
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return !(m_rawAuton.length() > 0);
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.driveTrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
}
