// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2619.PlyBot2018.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2619.PlyBot2018.subsystems.*;

/**
 *
 */
public class TextAutonCommand extends CommandGroup {
	  private int locFT = 0, locDG = 0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public TextAutonCommand(String rawAuton) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	while(!(rawAuton.length() > 0)) {
    		
	    	locFT = rawAuton.indexOf("ft");
	    	locDG = rawAuton.indexOf("dg");
	    	
	    	SmartDashboard.putString("ToBotAuton", rawAuton);
	    	SmartDashboard.putNumber("locFT", locFT);
	    	SmartDashboard.putNumber("locDG", locDG);
	    	if(locDG < 0) {
	    		locDG = 999;
	    	}
	    	if(locFT < 0) {
	    		locFT = 999;
	    	}
	    	
	    	if(locDG > locFT) {
	    		//these do not happen
	    		addSequential(new DriveXFeetMotionMagic(Integer.parseInt(rawAuton.substring(0, locFT))));
	    		rawAuton = rawAuton.substring(locFT+3);
	    	}
	    	else {
	    		addSequential(new TurnNDegreesAbsolutePID(Integer.parseInt(rawAuton.substring(0, locDG))));
	    		rawAuton = rawAuton.substring(locDG+3);
	    	}
    	}
    } 
}
